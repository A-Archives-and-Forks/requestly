import { KeyValueFormType, KeyValuePair, RQAPI } from "features/apiClient/types";
import { KeyValueTable } from "./KeyValueTable";
import { isEmpty, noop } from "lodash";
import { EnvironmentVariables } from "backend/environment/types";
import React from "react";

interface KeyValueTableProps {
  data: KeyValuePair[];
  autoGeneratedValues: KeyValuePair[];
  pairType: KeyValueFormType;
  variables: EnvironmentVariables;
  setKeyValuePairs: (updaterFn: (prev: RQAPI.Entry) => RQAPI.Entry) => void;
}

const KeyValueTableWIthAutoGeneratedValues: React.FC<KeyValueTableProps> = ({
  data,
  autoGeneratedValues,
  setKeyValuePairs,
  variables,
  pairType,
}) => {
  return (
    <div className="keyvalue-table-wrapper">
      {!isEmpty(autoGeneratedValues) && (
        <KeyValueTable
          data={autoGeneratedValues}
          setKeyValuePairs={noop}
          pairType={pairType}
          variables={variables}
          wrapperClass="auto-generated-values"
        />
      )}
      <KeyValueTable
        data={data}
        setKeyValuePairs={setKeyValuePairs}
        pairType={pairType}
        variables={variables}
        wrapperClass={`${!isEmpty(autoGeneratedValues) ? "pairs-with-auto-generated-values" : ""}`}
      />
    </div>
  );
};

export default KeyValueTableWIthAutoGeneratedValues;
